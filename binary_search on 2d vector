class Solution {
public:
    bool searchMatrix(vector<vector<int>>& a, int target) {
        
        if(a.size()==0||a[0].size()==0)
            return false;
     int n=a.size();
     int m=a[0].size();
        
        if(n==0||m==0)
            return false;
        if(n==1&&m==1)
            return(a[0][0]==target)?true:false;
        
        if(a[n-1][m-1]<target||a[0][0]>target)
            return false;
        if(a[0][0]==target||a[n-1][m-1]==target)
            return true;
        
        int start=0,end=n-1;
        
        int mid;
        while(end-start>1)
        {
            mid=start+(end-start)/2;
            if(a[mid][m-1]<=target)
                start=mid;
            else
                end=mid;
            
        }
        
        if(a[start][m-1]<target)
            return binary_search(a[end].begin(),a[end].end(),target);
        return binary_search(a[start].begin(),a[start].end(),target);
    }
};
