

#include <bits/stdc++.h>

using namespace std;

int solve(int a[],int n)
{
 //  int n=a.size();
   
    
       int dp[n][n];
 
    // initialize `T` by all 0's
    memset(dp, 0, sizeof dp);
       
       
       for(int g=0;g<n;g++)
       {
          for(int i=0,j=g;j<n;i++,j++)
          {
             int mn = *min_element(a+i , a + j + 1);
             int mx = *max_element(a + i, a + j + 1);
             
             if(2*mn<=mx)
             {
                dp[i][j]=min(1+dp[i+1][j],1+dp[i][j-1]);
             }
          }
       }
       
       return dp[0][n-1];
}


int main()
{
    /*int t;
    cin>>t;
    while(t--)
    {
       int n;cin>>n;
       
       std::vector<int>a(n+1) ;
       
       for(int i=0;i<n;i++)
       {
          cin>>a[i];
       }
       
       cout<<solve(a)<<endl;
       
    }*/
     int arr[] = {20, 4, 1, 3};
  int n = sizeof(arr)/sizeof(arr[0]);
  cout << solve(arr, n);
  return 0;
}
