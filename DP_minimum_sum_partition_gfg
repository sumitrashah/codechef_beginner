class Solution{

	public:
	int minDiffernce(int arr[], int n) 
	{ 
	    long long  range=0;
	    for(int i=0;i<n;i++)
	    {
	        range+=arr[i];
	    }
	    long long sum=range/2;
	    /*   vector<vector<bool>>dp(n+1,vector<bool>(sum+1,false));
        
        for(long long i=1;i<=n;i++)
        {
            dp[i-1][0]=true;
            for(long long j=1;j<=sum;j++)
            {
                dp[i][j]=dp[i-1][j];
                if(j>=arr[i-1])
                    dp[i][j]=dp[i][j]||dp[i-1][j-arr[i-1]];
                
                
            }
            
        }
        */
         int t[n+1][sum+1];
	    for (int i=0;i<=sum;i++) {
	        t[0][i] = 0;
	    }
	    for (int i=0;i<=n;i++) {
	        t[i][0] = 1;
	    }
	    
	    for (int i=1;i<=n;i++) {
	        for (int j=1;j<=sum;j++) {
	            if (arr[i-1] <= j) {
	                t[i][j] = t[i-1][j-arr[i-1]] || t[i-1][j];
	            }else {
	                t[i][j] = t[i-1][j];
	            }
	        }
	    }
       
       for(long long int i=sum;i>=0;i--)
        {
            if(t[n][i])
              {
                  return range-2*i;
              } 
               
        }
        
	}
};
