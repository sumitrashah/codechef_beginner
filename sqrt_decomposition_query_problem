#include <bits/stdc++.h>
using namespace std;
int a[100000];
int s[350];

/*int query(int l, int r, int n) 
{ 
  int min_in_range=INT_MAX;
  int blocksize = ceil(sqrt(n)); 

while (l<r && l%blocksize!=0 && l!=0) 
{ 
    // traversing first block in range 
    if(a[l]<min_in_range)
    {
     min_in_range=a[l];
    }
    l++; 
} 
while (l+blocksize <= r) 
{ 
    // traversing completely overlapped blocks in range
    if(s[l/blocksize]<min_in_range)
    { 
    min_in_range= s[l/blocksize];
    }
    l += blocksize; 
} 
while (l<=r) 
{ 
    // traversing last block in range 
    if(a[l]<min_in_range)
    {
     min_in_range=a[l];
    }
    l++; 
} 
return min_in_range; 
}*/

int main()
{

  int n;
  cin>>n;
  for(int i=0;i<n;i++)
  cin>>a[i];
  
     int x=ceil(sqrt(n));        //number of elements per block
     int len=ceil(n/double(x)); 
  
  for(int i=0;i<len;i++)
   s[i]=INT_MAX;
   
  for(int i=0;i<n;i++)
  {
     int index=i/len;
     s[index]=min(s[index],a[i]);
  }
  
  int q;
  cin>>q;
  
  while(q--)
  {
     int l,r;
     cin>>l>>r;
     
    int ans=INT_MAX;
     
     while(l<=r)
     {
        if(l%len==0 && l+len-1<=r)
        {
           ans=min(ans,s[l/len]);
           l=l+len;
           
        }
        else
        {
           ans=min(ans,a[l]);
           l++;
        }
     }
     
     //cout<<query()
     cout<<ans<<endl;
  }
    

    return 0;
}
