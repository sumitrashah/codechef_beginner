class Solution {
public:
    int findTargetSumWays(vector<int>& v, int S) {
        
        int n=v.size();
        int sum=0;
        int count=0;
        
        for(int i=0;i<n;i++)
        {
          if(v[i]==0)
              count++;
            sum+=v[i];
            
        }
        if(S>sum)
            return 0;
        if((sum+S)%2!=0)
            return 0;
        
        int s=(sum+S)/2;
        
        int t[n+1][s+1];
        
        for(int i=0;i<=s;i++)
            t[0][i]=0;
        for(int i=0;i<=n;i++)
            t[i][0]=1;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=s;j++)
            {
                if(v[i-1]==0)
                    t[i][j]=t[i-1][j];
                else if(j<v[i-1])
                    t[i][j]=t[i-1][j];
                else
                    t[i][j]=t[i-1][j]+t[i-1][j-v[i-1]];
            }
        }
        return t[n][s]*pow(2,count);
    }
};
